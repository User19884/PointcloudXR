//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Pose p_default_vive_tracker_2;
        
        private static SteamVR_Action_Pose p_default_vive_tracker_1;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Boolean p_startview_resetposition;
        
        private static SteamVR_Action_Boolean p_pointcloudview_EditToolToggleMode;
        
        private static SteamVR_Action_Boolean p_pointcloudview_MeasureToolToggleState;
        
        private static SteamVR_Action_Single p_pointcloudview_Throttle;
        
        private static SteamVR_Action_Boolean p_pointcloudview_MoveBackwards;
        
        private static SteamVR_Action_Boolean p_pointcloudview_EditToolMoveForward;
        
        private static SteamVR_Action_Boolean p_pointcloudview_EditToolMoveBackward;
        
        private static SteamVR_Action_Boolean p_pointcloudview_EditToolScaleUp;
        
        private static SteamVR_Action_Boolean p_pointcloudview_EditToolScaleDown;
        
        private static SteamVR_Action_Boolean p_pointcloudview_EditToolOnOff;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Pose default_vive_tracker_2
        {
            get
            {
                return SteamVR_Actions.p_default_vive_tracker_2.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose default_vive_tracker_1
        {
            get
            {
                return SteamVR_Actions.p_default_vive_tracker_1.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean startview_resetposition
        {
            get
            {
                return SteamVR_Actions.p_startview_resetposition.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_EditToolToggleMode
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_EditToolToggleMode.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_MeasureToolToggleState
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_MeasureToolToggleState.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single pointcloudview_Throttle
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_MoveBackwards
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_MoveBackwards.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_EditToolMoveForward
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_EditToolMoveForward.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_EditToolMoveBackward
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_EditToolMoveBackward.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_EditToolScaleUp
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_EditToolScaleUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_EditToolScaleDown
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_EditToolScaleDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean pointcloudview_EditToolOnOff
        {
            get
            {
                return SteamVR_Actions.p_pointcloudview_EditToolOnOff.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_vive_tracker_2,
                    SteamVR_Actions.default_vive_tracker_1,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.startview_resetposition,
                    SteamVR_Actions.pointcloudview_EditToolToggleMode,
                    SteamVR_Actions.pointcloudview_MeasureToolToggleState,
                    SteamVR_Actions.pointcloudview_Throttle,
                    SteamVR_Actions.pointcloudview_MoveBackwards,
                    SteamVR_Actions.pointcloudview_EditToolMoveForward,
                    SteamVR_Actions.pointcloudview_EditToolMoveBackward,
                    SteamVR_Actions.pointcloudview_EditToolScaleUp,
                    SteamVR_Actions.pointcloudview_EditToolScaleDown,
                    SteamVR_Actions.pointcloudview_EditToolOnOff};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_vive_tracker_2,
                    SteamVR_Actions.default_vive_tracker_1,
                    SteamVR_Actions.startview_resetposition,
                    SteamVR_Actions.pointcloudview_EditToolToggleMode,
                    SteamVR_Actions.pointcloudview_MeasureToolToggleState,
                    SteamVR_Actions.pointcloudview_Throttle,
                    SteamVR_Actions.pointcloudview_MoveBackwards,
                    SteamVR_Actions.pointcloudview_EditToolMoveForward,
                    SteamVR_Actions.pointcloudview_EditToolMoveBackward,
                    SteamVR_Actions.pointcloudview_EditToolScaleUp,
                    SteamVR_Actions.pointcloudview_EditToolScaleDown,
                    SteamVR_Actions.pointcloudview_EditToolOnOff};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_vive_tracker_2,
                    SteamVR_Actions.default_vive_tracker_1};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.startview_resetposition,
                    SteamVR_Actions.pointcloudview_EditToolToggleMode,
                    SteamVR_Actions.pointcloudview_MeasureToolToggleState,
                    SteamVR_Actions.pointcloudview_MoveBackwards,
                    SteamVR_Actions.pointcloudview_EditToolMoveForward,
                    SteamVR_Actions.pointcloudview_EditToolMoveBackward,
                    SteamVR_Actions.pointcloudview_EditToolScaleUp,
                    SteamVR_Actions.pointcloudview_EditToolScaleDown,
                    SteamVR_Actions.pointcloudview_EditToolOnOff};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.pointcloudview_Throttle};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.startview_resetposition,
                    SteamVR_Actions.pointcloudview_EditToolToggleMode,
                    SteamVR_Actions.pointcloudview_MeasureToolToggleState,
                    SteamVR_Actions.pointcloudview_Throttle,
                    SteamVR_Actions.pointcloudview_MoveBackwards,
                    SteamVR_Actions.pointcloudview_EditToolMoveForward,
                    SteamVR_Actions.pointcloudview_EditToolMoveBackward,
                    SteamVR_Actions.pointcloudview_EditToolScaleUp,
                    SteamVR_Actions.pointcloudview_EditToolScaleDown,
                    SteamVR_Actions.pointcloudview_EditToolOnOff};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_vive_tracker_2 = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/vive_tracker_2")));
            SteamVR_Actions.p_default_vive_tracker_1 = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/vive_tracker_1")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_startview_resetposition = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/startview/in/resetposition")));
            SteamVR_Actions.p_pointcloudview_EditToolToggleMode = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/EditToolToggleMode")));
            SteamVR_Actions.p_pointcloudview_MeasureToolToggleState = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/MeasureToolToggleState")));
            SteamVR_Actions.p_pointcloudview_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/pointcloudview/in/Throttle")));
            SteamVR_Actions.p_pointcloudview_MoveBackwards = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/MoveBackwards")));
            SteamVR_Actions.p_pointcloudview_EditToolMoveForward = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/EditToolMoveForward")));
            SteamVR_Actions.p_pointcloudview_EditToolMoveBackward = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/EditToolMoveBackward")));
            SteamVR_Actions.p_pointcloudview_EditToolScaleUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/EditToolScaleUp")));
            SteamVR_Actions.p_pointcloudview_EditToolScaleDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/EditToolScaleDown")));
            SteamVR_Actions.p_pointcloudview_EditToolOnOff = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/pointcloudview/in/EditToolOnOff")));
        }
    }
}
